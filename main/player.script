function init(self)
	msg.post('.', 'acquire_input_focus')

	self.moving = false
	self.firing = false
	
	self.input = vmath.vector3()
	self.dir = vmath.vector3(0, -1, 0)
	self.speed = 50
	self.current_anim = nil
end

function final(self)
	msg.post('.', 'release_input_focus')
end


function update(self, dt)
	if self.moving then
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
	end

	if self.firing then
		local angle = math.atan2(self.dir.y, self.dir.x)
		local rot = vmath.quat_rotation_z(angle)
		local props = { dir = self.dir }
		factory.create('#rocketfactory', nil, rot, props)
	end

	local anim = hash("idle")                                  -- [1]

	if self.dir.x > 0 then                                     -- [2]
		anim = hash("right")
	elseif self.dir.x < 0 then
		anim = hash("left")
	elseif self.dir.y > 0 then
		anim = hash("up")
	elseif self.dir.y < 0 then
		anim = hash("down")
	end
	if self.moving == false then
		anim = hash('idle')
	end

	if anim ~= self.current_anim then                          -- [3]
		msg.post("#sprite", "play_animation", { id = anim })   -- [4]
		self.current_anim = anim                               -- [5]
	end

	self.input.x = 0
	self.input.y = 0
	
	self.moving = false
	self.firing = false

end

function on_input(self, action_id, action)
	-- print(action_id)
	if action_id == hash('up') then
		self.input.y = 1
	elseif action_id == hash('down') then
		self.input.y = -1
	elseif action_id == hash('left') then
		self.input.x = -1
	elseif action_id == hash('right') then
		self.input.x = 1
	end
	
	if action_id == hash('fire') and action.pressed then
		self.firing = true
	end

	if vmath.length(self.input) > 0 then
		self.moving = true
		self.dir = vmath.normalize(self.input)
		--print('player_dir', self.dir)
	end
end
function on_message(self, message_id, message, sender)
	if message_id == hash("quit") then
		sys.exit(0)
	
	elseif message_id == hash("restart") then
		print('resived a message')
		go.set_position(vmath.vector3(100, 200, 1))
		-- msg.post(message.other_id, "enable")
	end
end

